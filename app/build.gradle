apply plugin: 'com.android.application'
apply plugin: 'me.tatarka.retrolambda'
apply plugin: 'realm-android'

buildscript {
    repositories {
        jcenter()
        mavenCentral()
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'com.neenbedankt.gradle.plugins:android-apt:1.8'
        classpath 'me.tatarka:gradle-retrolambda:3.2.5'
        classpath 'io.realm:realm-gradle-plugin:1.1.1'
        classpath 'io.fabric.tools:gradle:1.+'
    }
}

repositories {
    mavenCentral()
    maven {
        url 'http://oss.jfrog.org/artifactory/oss-snapshot-local'
    }
    maven { url 'https://maven.fabric.io/public' }
}

android {

    def globalConfiguration = rootProject.extensions.getByName("ext")

    compileSdkVersion globalConfiguration.getAt("androidCompileSdkVersion")
    buildToolsVersion globalConfiguration.getAt("androidBuildToolsVersion")
    defaultConfig {
        applicationId "com.spy.spycamera"
        minSdkVersion globalConfiguration.getAt("androidMinSdkVersion")
        targetSdkVersion globalConfiguration.getAt("androidTargetSdkVersion")
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    dexOptions {
        javaMaxHeapSize "4g"
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/rxjava.properties'
    }
}

dependencies {

    def presentationDependencies = rootProject.ext.presentationDependencies
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:24.2.1'
    testCompile 'junit:junit:4.12'




    compile presentationDependencies.recyclerView
    compile presentationDependencies.butterKnife
    apt presentationDependencies.butterKnifeCompiler
    compile presentationDependencies.rxBinding
    compile presentationDependencies.picasso
    compile presentationDependencies.retrofit
    compile presentationDependencies.okhttp3LogginInterceptor
    compile presentationDependencies.gson
    compile presentationDependencies.gsonConverter
    compile presentationDependencies.rxAndroid
    compile presentationDependencies.rxJava
    compile presentationDependencies.rxJavaAdapter
    compile presentationDependencies.otto
    compile presentationDependencies.daggerCompiler
    compile presentationDependencies.dagger
    compile presentationDependencies.proguard
}
